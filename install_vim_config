#!/bin/bash

VIMTMP="/home/`whoami`/.vim/tmp"
VIMBACKUP="/home/`whoami`/.vim/backups"

if [ ! -d $VIMTMP ]
then
  mkdir -p $VIMTMP
fi

if [ ! -d $VIMBACKUP ]
then
  mkdir -p $VIMBACKUP
fi

echo "
call pathogen#runtime_append_all_bundles()

filetype on       \" Automatically detect file types.
filetype indent on
filetype plugin on
set nocompatible  \" We don't want vi compatibility
set hidden        \" Current buffer can be put to the background without writing to disk


\" Add recently accessed projects menu (project plugin)
set viminfo^=!

\" Tab settings
set sts=2
set shiftwidth=2
set autoindent
set smarttab
set expandtab
set backspace=start,indent

autocmd FileType make	set noexpandtab
autocmd FileType python	set noexpandtab

au BufRead,BufNewFile *.js set ft=javascript.jquery

\" Minibuffer Explorer Settings
let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1

\" alt+n or alt+p to navigate between entries in QuickFix
map <silent> <m-p> :cp <cr>
map <silent> <m-n> :cn <cr>

\" Display options
syntax on
set ruler
set lines=24 columns=136      \" Size of window


\" Backups & Files
set backup    \" Enable creation of backup file
set backupdir=~/.vim/backups \" Where backups will go.
set directory=~/.vim/tmp     \" Where temporary files will go.

\" Search Options
set hlsearch
set ignorecase
set smartcase

\" Keep a longer history
set history=1000

\" Keyboard Shortcuts
\"
\" Swap ' and ` commands because `a is more useful 
nnoremap ' \`
nnoremap \` '
\" map leader to ,
let mapleader = \",\"

\" make file completion similar to shell
set wildmode=list:longest

\" NERDTree options
map <leader>D :execute 'NERDTreeToggle ' . getcwd()<CR>

\" Pathogen options
map <leader>h :call pathogen#helptags()<CR>

\" Rails.vim options
let g:rails_default_file='config/database.yml'

\" enable extended % matching
runtime macros/matchit.vim

" >> ~/.vimrc
