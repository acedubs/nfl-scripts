#!/bin/bash

PACKAGE="nginx-0.7.61"
USER="`whoami`"
SOURCES="/home/$USER/sources"

if [ -d $SOURCES ]
then
  cd $SOURCES
else
  mkdir $SOURCES
  cd $SOURCES
fi

wget http://sysoev.ru/nginx/$PACKAGE.tar.gz
tar xzf $PACKAGE.tar.gz

echo "Installing dependencies"
sudo aptitude install libc6 libpcre3 libpcre3-dev libpcrecpp0 libssl0.9.8 libssl-dev zlib1g zlib1g-dev lsb-base



cd $PACKAGE/
echo "build..."
./configure --sbin-path=/usr/local/sbin --with-http_ssl_module
make && sudo make install

echo "Adding init script"
sudo cp /home/$USER/scripts/nginx_init_script /etc/init.d/nginx
sudo chmod +x /etc/init.d/nginx
sudo /usr/sbin/update-rc.d -f nginx defaults

echo "Debian-style directory layout"
sudo mkdir /usr/local/nginx/sites-available
sudo mkdir /usr/local/nginx/sites-enabled
sudo mv /usr/local/nginx/conf/nginx.conf /usr/local/nginx/conf/nginx.conf.bak
sudo echo "user www-data;
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    gzip  on;

    include /usr/local/nginx/sites-enabled/*;

}" > /tmp/nginx.conf
sudo mv /tmp/nginx.conf /usr/local/nginx/conf/

echo "Adding default site"
sudo echo "server {
    listen       80;
    server_name  localhost;

    location / {
        root   html;
        index  index.html index.htm;
    }


    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }

}" > /tmp/default
sudo mv /tmp/default /usr/local/nginx/sites-available/

sudo ln -s /usr/local/nginx/sites-available/default /usr/local/nginx/sites-enabled/default

sudo /etc/init.d/nginx start
